name: "Build workflow"

on: [push]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
      - name: Set Docker Tags
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          ACTION_REF=${GITHUB_REF:11}
          IMAGE_VERSION=${ACTION_REF//\//_}_${GITHUB_SHA::6}
          echo "ECR_TAG=${{ steps.ecr.outputs.registry }}/test-lambda:${IMAGE_VERSION}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}-test
          restore-keys: ${{ runner.os }}-buildx-
      - name: Build Image and Push to Registries
        uses: docker/build-push-action@v2
        with:
          context: test-lambda-php
          platforms: linux/amd64
          build-args: |
            BUILD_ID=${{ github.sha }}
            VERSION=${{ github.sha }}
          push: true
          tags: ${{ env.ECR_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move buildx cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
