name: "Build workflow"

on: [push]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
      - run: echo ${{ steps.ecr.outputs.registry }}
#      - name: Set Docker Tags
#        env:
#          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#        run: |
#          IMAGE_VERSION=${ACTION_REF//\//_}
#          echo "PROD_ECR_TAG=${{ steps.prodecr.outputs.registry }}/${{ inputs.image-name }}:${IMAGE_VERSION}" >> $GITHUB_ENV
#          echo "DEV_ECR_TAG=${{ steps.devecr.outputs.registry }}/${{ inputs.image-name }}:${IMAGE_VERSION}" >> $GITHUB_ENV
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#      - name: Move buildx cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
#      - name: Build Image and Push to Registries
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          platforms: linux/amd64,linux/arm64
#          build-args: |
#            BUILD_ID=${{ github.sha }}
#            VERSION=${{ env.ACTION_REF }}
#          push: true
#          tags: ${{ env.DEV_ECR_TAG }}
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new
#      - name: Move buildx cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
